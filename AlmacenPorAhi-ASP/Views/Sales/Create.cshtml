@model AlmacenPorAhiASP.Models.Venta

@{
    ViewBag.Title = "Almacenes por Ahí";
    bool isLogged = Request.Cookies["IsLoggedIn"] != null && Request.Cookies["IsLoggedIn"].Value == "true";
}

@if (isLogged)
{
    <h2>Ingreso de venta</h2>

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClienteId, "Nombre Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductoId, "Nombre Producto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProductoId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsuarioId, "Nombre Vendedor", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UsuarioId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UsuarioId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", @id = "cantidad" } })
                    @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "total" } })
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Ingresar" class="btn btn-primary" />
                </div>
            </div>

            <br />
        </div>
    }

    <div>
        @Html.ActionLink("Volver al listado", "Index")
    </div>
}
else
{
    <h2>No autorizado</h2>
    <p>Para poder usar las herramientas debe iniciar sesion @Html.ActionLink("aquí", "Ingress", "Home")  o puede crear una cuenta @Html.ActionLink("aquí", "Create", "User")</p>
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ProductoId').change(function () {
            var selectedProductId = $(this).val();
            if (selectedProductId) {
                $.ajax({
                    url: '@Url.Action("GetProductDetails", "Sales")',
                    type: 'GET',
                    data: { productId: selectedProductId },
                    success: function (data) {
                        $('#precioProducto').val(data.Precio);
                        $('#stockProducto').val(data.Stock);
                        calculateTotal();
                    }
                });
            }
        });

        $('#cantidad').on('input', function () {
            calculateTotal();
        });

        function calculateTotal() {
            var precio = parseFloat($('#precioProducto').val());
            var cantidad = parseInt($('#cantidad').val());
            var stock = parseInt($('#stockProducto').val());
            if (!isNaN(precio) && !isNaN(cantidad)) {
                var total = precio * cantidad;
                $('#total').val(total);

                if (cantidad > stock) {
                    alert('Stock insuficiente.');
                    $('#cantidad').val(stock);
                    $('#total').val(precio * stock);
                }
            }
        }
    });
</script>

<!-- Campos ocultos para el precio y stock del producto -->
<input type="hidden" id="precioProducto" />
<input type="hidden" id="stockProducto" />
